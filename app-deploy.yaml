apiVersion: appsody.dev/v1beta1
kind: AppsodyApplication
metadata:
  annotations:
    architecture: x86_64
    authoritative-source-url: registry.access.redhat.com
    build-date: 2020-03-31T14:54:13.907559
    commit.image.appsody.dev/date: Mon Apr 20 09:30:09 2020 -0400
    commit.image.appsody.dev/message: 0.8.0
    commit.stack.appsody.dev/contextDir: /incubator/java-spring-boot2
    commit.stack.appsody.dev/date: Fri May 1 15:13:54 2020 +0100
    commit.stack.appsody.dev/message: 'Merge pull request #331 from uberskigeek/329_fix_missing_continuation'
    description: This image is the Kabanero development container for the java-spring-boot2
      stack
    distribution-scope: public
    image.opencontainers.org/created: "2020-05-15T17:07:11-04:00"
    image.opencontainers.org/documentation: https://github.com/kabanero-io/sample-java-spring-boot2
    image.opencontainers.org/revision: b641eda5b26fbccfa79068cc48f8f5d9c35509e9-modified
    image.opencontainers.org/source: https://github.com/kabanero-io/sample-java-spring-boot2/tree/HEAD
      -> origin
    image.opencontainers.org/url: https://github.com/kabanero-io/sample-java-spring-boot2
    k8s.io/description: The Universal Base Image is designed and engineered to be
      the base layer for all of your containerized applications, middleware and utilities.
      This base image is freely redistributable, but Red Hat only supports Red Hat
      technologies through subscriptions for Red Hat products. This image is maintained
      by Red Hat and updated regularly.
    k8s.io/display-name: Red Hat Universal Base Image 8
    maintainer: Red Hat, Inc.
    name: kabanero/java-spring-boot2
    openshift.io/expose-services: ""
    openshift.io/tags: base rhel8
    redhat.com/build-host: cpt-1007.osbs.prod.upshift.rdu2.redhat.com
    redhat.com/component: ubi8-container
    redhat.com/license_terms: https://www.redhat.com/en/about/red-hat-end-user-license-agreements#UBI
    release: "408"
    stack.appsody.dev/authors: Erin Schnabel <ebullient>, Ozzy Osborne <bardweller>,
      Richard Trotter <richard-trotter>, Harish Yayi <yharish991>
    stack.appsody.dev/configured: docker.io/kabanerobeta/java-spring-boot2:0.3
    stack.appsody.dev/created: "2020-05-01T14:41:23Z"
    stack.appsody.dev/description: Spring Boot using OpenJ9 and Maven
    stack.appsody.dev/digest: sha256:f1d1d8697f262128480652daedbec74788180197a37629e9de724eb4530615f8
    stack.appsody.dev/documentation: https://github.com/kabanero-io/collections/tree/master/incubator/java-spring-boot2/README.md
    stack.appsody.dev/licenses: Apache-2.0
    stack.appsody.dev/revision: 8c75520a677c818df6c9c546b9402cc1733feaa6
    stack.appsody.dev/source: https://github.com/kabanero-io/collections/tree/master/incubator/java-spring-boot2/image
    stack.appsody.dev/tag: docker.io/kabanerobeta/java-spring-boot2:0.3.29
    stack.appsody.dev/title: Spring BootÂ®
    stack.appsody.dev/url: https://github.com/kabanero-io/collections/tree/master/incubator/java-spring-boot2
    summary: Image for Kabanero java-spring-boot2 development
    url: https://access.redhat.com/containers/#/registry.access.redhat.com/ubi8/images/8.1-408
    vcs-ref: 26f36bfa3e3a04c8c866b250924c1aefc34f01c9
    vcs-type: git
    vendor: Kabanero
    version: 0.3.23
  creationTimestamp: null
  labels:
    image.opencontainers.org/title: sample-java-spring-boot2
    stack.appsody.dev/id: java-spring-boot2
    stack.appsody.dev/version: 0.3.29
  name: sample-java-spring-boot2
spec:
  applicationImage: dev.local/sample-java-spring-boot2
  createKnativeService: true
  expose: true
  livenessProbe:
    failureThreshold: 12
    httpGet:
      path: /actuator/liveness
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 2
  monitoring:
    endpoints:
    - path: /actuator/prometheus
    labels:
      k8s-app: sample-java-spring-boot2
  readinessProbe:
    failureThreshold: 12
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 1
  service:
    annotations:
      prometheus.io/path: /actuator/prometheus
      prometheus.io/scrape: "true"
    port: 8080
    type: NodePort
  stack: java-spring-boot2
  version: 1.0.0
